plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

def props = new Properties()
file("src/main/resources/konduto.properties").withInputStream { props.load(it) }

group = 'com.konduto.sdk'
version = props["version"]
sourceCompatibility = JavaVersion.VERSION_1_6

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

repositories {
	mavenCentral()
}

dependencies {
    implementation 'commons-httpclient:commons-httpclient:3.+'
    implementation 'com.google.code.gson:gson:2.+'
    testImplementation 'junit:junit:4.+'
    testImplementation 'com.github.tomakehurst:wiremock:1.+'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.compileClasspath.collect {
        it.isDirectory() ? it : zipTree(it)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'java-sdk'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Konduto\'s Java SDK'
                description = 'Easily integrate with Konduto (https://konduto' +
                        '.com), a fraud prevention service.'
                url = 'https://konduto.com'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'rsampaio'
                        name = 'Raphael Sampaio'
                        email = 'raphael@konduto.com'
                    }
                }
                scm {
                    connection = 'https://github.com/konduto/java-sdk'
                    developerConnection = 'https://github.com/konduto/java-sdk'
                    url = 'https://github.com/konduto/java-sdk'
                }
            }
        }
    }
    repositories {
        maven {
            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

signing {
    sign publishing.publications.mavenJava
}
